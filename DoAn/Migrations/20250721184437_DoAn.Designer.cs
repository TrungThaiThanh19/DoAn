// <auto-generated />
using System;
using DoAn.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn.Migrations
{
    [DbContext(typeof(DoAnDbContext))]
    [Migration("20250721184437_DoAn")]
    partial class DoAn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn.Models.ChiTietGioHang", b =>
                {
                    b.Property<Guid>("ID_ChiTietGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_GioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_ChiTietGioHang");

                    b.HasIndex("ID_GioHang");

                    b.HasIndex("ID_SanPhamChiTiet");

                    b.ToTable("ChiTietGioHangs");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietKhuyenMai", b =>
                {
                    b.Property<Guid>("ID_ChiTietKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaSauGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_KhuyenMai")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_ChiTietKhuyenMai");

                    b.HasIndex("ID_KhuyenMai");

                    b.HasIndex("ID_SanPhamChiTiet");

                    b.ToTable("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietTraHang", b =>
                {
                    b.Property<Guid>("ID_ChiTietTraHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ChiTietSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_TraHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SanPhamChiTietID_SanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TienHoan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TraHangID_TraHang")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_ChiTietTraHang");

                    b.HasIndex("SanPhamChiTietID_SanPhamChiTiet");

                    b.HasIndex("TraHangID_TraHang");

                    b.ToTable("ChiTietTraHangs");
                });

            modelBuilder.Entity("DoAn.Models.DiaChiKhachHang", b =>
                {
                    b.Property<Guid>("ID_DiaChiKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DiaChiMacDinh")
                        .HasColumnType("bit");

                    b.Property<Guid>("ID_KhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Quan_Huyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh_ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Xa_Phuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_DiaChiKhachHang");

                    b.HasIndex("ID_KhachHang");

                    b.ToTable("DiaChiKhachHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.Property<Guid>("ID_GioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_KhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhachHangID_KhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID_GioHang");

                    b.HasIndex("KhachHangID_KhachHang");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioiTinh", b =>
                {
                    b.Property<Guid>("ID_GioiTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten_GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_GioiTinh");

                    b.ToTable("GioiTinhs");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.Property<Guid>("ID_HoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ID_Voucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ma_HoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhanVienID_NhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PhuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhuongThucNhanHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt_NguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTienSauGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienTruocGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_HoaDon");

                    b.HasIndex("ID_Voucher");

                    b.HasIndex("NhanVienID_NhanVien");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("DoAn.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("ID_HoaDonChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SanPhamChiTietID_SanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_HoaDonChiTiet");

                    b.HasIndex("ID_HoaDon");

                    b.HasIndex("SanPhamChiTietID_SanPhamChiTiet");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.KhachHang", b =>
                {
                    b.Property<Guid>("ID_KhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_TaiKhoan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma_KhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_KhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_KhachHang");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DoAn.Models.KhuyenMai", b =>
                {
                    b.Property<Guid>("ID_KhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaTriGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaTriToiDa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KieuGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ma_KhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten_KhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_KhuyenMai");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.Property<Guid>("ID_NhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiLienHe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_TaiKhoan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma_NhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_NhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_NhanVien");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("DoAn.Models.QuanLyTraHang", b =>
                {
                    b.Property<Guid>("ID_TraHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienXuLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTienHoan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_TraHang");

                    b.HasIndex("ID_HoaDon");

                    b.ToTable("TraHangs");
                });

            modelBuilder.Entity("DoAn.Models.QuocGia", b =>
                {
                    b.Property<Guid>("ID_QuocGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten_QuocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_QuocGia");

                    b.ToTable("QuocGias");
                });

            modelBuilder.Entity("DoAn.Models.Roles", b =>
                {
                    b.Property<Guid>("ID_Roles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma_Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Roles");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID_Roles = new Guid("a0000000-0000-0000-0000-000000000001"),
                            Ma_Roles = "KH",
                            Ten_Roles = "khachhang"
                        },
                        new
                        {
                            ID_Roles = new Guid("a0000000-0000-0000-0000-000000000002"),
                            Ma_Roles = "NV",
                            Ten_Roles = "nhanvien"
                        },
                        new
                        {
                            ID_Roles = new Guid("a0000000-0000-0000-0000-000000000003"),
                            Ma_Roles = "AD",
                            Ten_Roles = "admin"
                        });
                });

            modelBuilder.Entity("DoAn.Models.SanPham", b =>
                {
                    b.Property<Guid>("ID_SanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HuongCuoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HuongDau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HuongGiua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID_GioiTinh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_QuocGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_ThuongHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma_SanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("QuocGiaID_QuocGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten_SanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiGianLuuHuong")
                        .HasColumnType("int");

                    b.HasKey("ID_SanPham");

                    b.HasIndex("ID_GioiTinh");

                    b.HasIndex("ID_ThuongHieu");

                    b.HasIndex("QuocGiaID_QuocGia");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("ID_SanPhamChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_SanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_TheTich")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SanPhamID_SanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_SanPhamChiTiet");

                    b.HasIndex("ID_TheTich");

                    b.HasIndex("SanPhamID_SanPham");

                    b.ToTable("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("ID_TaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Roles")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_TaiKhoan");

                    b.HasIndex("ID_Roles");

                    b.ToTable("TaiKhoans");

                    b.HasData(
                        new
                        {
                            ID_TaiKhoan = new Guid("b0000000-0000-0000-0000-000000000001"),
                            ID_Roles = new Guid("a0000000-0000-0000-0000-000000000003"),
                            Password = "admin",
                            Uername = "admin"
                        });
                });

            modelBuilder.Entity("DoAn.Models.TheTich", b =>
                {
                    b.Property<Guid>("ID_TheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ma_TheTich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_TheTich");

                    b.ToTable("TheTichs");
                });

            modelBuilder.Entity("DoAn.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("ID_ThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma_ThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_ThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_ThuongHieu");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("DoAn.Models.TrangThaiDonHang", b =>
                {
                    b.Property<Guid>("ID_TrangThaiDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_HoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayChuyen")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_TrangThaiDonHang");

                    b.HasIndex("ID_HoaDon");

                    b.ToTable("TrangThaiDonHangs");
                });

            modelBuilder.Entity("DoAn.Models.Voucher", b =>
                {
                    b.Property<Guid>("ID_Voucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaTriGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaTriToiDa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaTriToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ID_TaiKhoan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KieuGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ma_Voucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid>("TaiKhoanID_TaiKhoan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten_Voucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ID_Voucher");

                    b.HasIndex("TaiKhoanID_TaiKhoan");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietGioHang", b =>
                {
                    b.HasOne("DoAn.Models.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("ID_GioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany()
                        .HasForeignKey("ID_SanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("DoAn.Models.KhuyenMai", "KhuyenMai")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("ID_KhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("ID_SanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietTraHang", b =>
                {
                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("ChiTietTraHangs")
                        .HasForeignKey("SanPhamChiTietID_SanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.QuanLyTraHang", "TraHang")
                        .WithMany("ChiTietTraHangs")
                        .HasForeignKey("TraHangID_TraHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("TraHang");
                });

            modelBuilder.Entity("DoAn.Models.DiaChiKhachHang", b =>
                {
                    b.HasOne("DoAn.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("ID_KhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.HasOne("DoAn.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangID_KhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.HasOne("DoAn.Models.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_Voucher")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DoAn.Models.NhanVien", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("NhanVienID_NhanVien");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DoAn.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("DoAn.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("SanPhamChiTietID_SanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.KhachHang", b =>
                {
                    b.HasOne("DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("KhachHangs")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.HasOne("DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("NhanViens")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn.Models.QuanLyTraHang", b =>
                {
                    b.HasOne("DoAn.Models.HoaDon", "HoaDon")
                        .WithMany("TraHangs")
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("DoAn.Models.SanPham", b =>
                {
                    b.HasOne("DoAn.Models.GioiTinh", "GioiTinh")
                        .WithMany("SanPhams")
                        .HasForeignKey("ID_GioiTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("ID_ThuongHieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.QuocGia", "QuocGia")
                        .WithMany("SanPhams")
                        .HasForeignKey("QuocGiaID_QuocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioiTinh");

                    b.Navigation("QuocGia");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("DoAn.Models.TheTich", "TheTich")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("ID_TheTich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("SanPhamID_SanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("TheTich");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.HasOne("DoAn.Models.Roles", "Roles")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("ID_Roles")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DoAn.Models.TrangThaiDonHang", b =>
                {
                    b.HasOne("DoAn.Models.HoaDon", "HoaDon")
                        .WithMany("TrangThaiDonHangs")
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("DoAn.Models.Voucher", b =>
                {
                    b.HasOne("DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanID_TaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioiTinh", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("TraHangs");

                    b.Navigation("TrangThaiDonHangs");
                });

            modelBuilder.Entity("DoAn.Models.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAn.Models.QuanLyTraHang", b =>
                {
                    b.Navigation("ChiTietTraHangs");
                });

            modelBuilder.Entity("DoAn.Models.QuocGia", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DoAn.Models.Roles", b =>
                {
                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("DoAn.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("ChiTietTraHangs");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.Navigation("KhachHangs");

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("DoAn.Models.TheTich", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DoAn.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
