// <auto-generated />
using System;
using DoAn.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn.Migrations
{
    [DbContext(typeof(DuAnDbContext))]
    [Migration("20250709081048_khanh")]
    partial class khanh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn.Models.ChiTietDonDatHang", b =>
                {
                    b.Property<Guid>("IdDdhct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDdh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdDdhct");

                    b.HasIndex("IdCtsp");

                    b.HasIndex("IdDdh");

                    b.ToTable("ChiTietDonDatHangs");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietHoaDon", b =>
                {
                    b.Property<Guid>("IdHdct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdCtsp")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHd")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdHdct");

                    b.HasIndex("IdCtsp");

                    b.HasIndex("IdHd");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("DoAn.Models.DonDatHang", b =>
                {
                    b.Property<Guid>("ID_DDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiGiaoHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ID_KH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_PTTT")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_TTDH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_VCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_DDH");

                    b.HasIndex("ID_KH");

                    b.HasIndex("ID_PTTT");

                    b.HasIndex("ID_TTDH");

                    b.HasIndex("ID_VCH");

                    b.ToTable("DonDatHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.Property<Guid>("IdGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKh")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdGioHang");

                    b.HasIndex("IdKh");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("IdGioHangCt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdCtsp")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGioHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SanPhamIdSp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdGioHangCt");

                    b.HasIndex("IdCtsp");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("SanPhamIdSp");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.GioiTinh", b =>
                {
                    b.Property<Guid>("IdGioiTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenGioTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGioiTinh");

                    b.ToTable("gioiTinhs");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.Property<Guid>("IdHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_VCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNv")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PhuongThucThanhToanIdPhuongThucThanhToan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SdtKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VoucherIdVch")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdHd");

                    b.HasIndex("IdNv");

                    b.HasIndex("PhuongThucThanhToanIdPhuongThucThanhToan");

                    b.HasIndex("VoucherIdVch");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("DoAn.Models.KhachHang", b =>
                {
                    b.Property<Guid>("IdKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdTk")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdKh");

                    b.HasIndex("IdTk")
                        .IsUnique();

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DoAn.Models.MuiHuong", b =>
                {
                    b.Property<Guid>("IdMuiHuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenMH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdMuiHuong");

                    b.ToTable("muiHuongs");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.Property<Guid>("IdNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdTk")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoCccd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdNv");

                    b.HasIndex("IdTk")
                        .IsUnique();

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("DoAn.Models.PhanQuyen", b =>
                {
                    b.Property<Guid>("IdPhanQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdPhanQuyen");

                    b.ToTable("PhanQuyens");
                });

            modelBuilder.Entity("DoAn.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("IdPhuongThucThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenPT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPhuongThucThanhToan");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("DoAn.Models.SanPham", b =>
                {
                    b.Property<Guid>("IdSp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdSp");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("IdCtsp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGioTinh")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMuiHuong")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSp")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdTheTich")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdThuongHieu")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdCtsp");

                    b.HasIndex("IdGioTinh");

                    b.HasIndex("IdMuiHuong");

                    b.HasIndex("IdSp");

                    b.HasIndex("IdTheTich");

                    b.HasIndex("IdThuongHieu");

                    b.ToTable("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("ID_TK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVaiTro")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ID_TK");

                    b.HasIndex("IdVaiTro");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("DoAn.Models.TheTich", b =>
                {
                    b.Property<Guid>("IdTheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TheTichs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdTheTich");

                    b.ToTable("theTichs");
                });

            modelBuilder.Entity("DoAn.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("IdThuongHieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdThuongHieu");

                    b.ToTable("thuongHieus");
                });

            modelBuilder.Entity("DoAn.Models.TrangThaiDonHang", b =>
                {
                    b.Property<Guid>("IdTrangThaiHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTrangThaiDh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTrangThaiHd");

                    b.ToTable("TrangThaiDonHangs");
                });

            modelBuilder.Entity("DoAn.Models.VaiTro", b =>
                {
                    b.Property<Guid>("IdVaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdVaiTro");

                    b.ToTable("VaiTros");
                });

            modelBuilder.Entity("DoAn.Models.VaiTro_PhanQuyen", b =>
                {
                    b.Property<Guid>("IdVtPq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdQuyen")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVaiTro")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdVtPq");

                    b.HasIndex("IdQuyen");

                    b.HasIndex("IdVaiTro");

                    b.ToTable("VaiTroPhanQuyens");
                });

            modelBuilder.Entity("DoAn.Models.Voucher", b =>
                {
                    b.Property<Guid>("IdVch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdVch");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietDonDatHang", b =>
                {
                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("ChiTietDonDatHangs")
                        .HasForeignKey("IdCtsp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.DonDatHang", "DonDatHang")
                        .WithMany("ChiTietDonDatHangs")
                        .HasForeignKey("IdDdh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonDatHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdCtsp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.DonDatHang", b =>
                {
                    b.HasOne("DoAn.Models.KhachHang", "KhachHang")
                        .WithMany("DonDatHangs")
                        .HasForeignKey("ID_KH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("DonDatHangs")
                        .HasForeignKey("ID_PTTT")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.TrangThaiDonHang", "TrangThaiDonHang")
                        .WithMany("DonDatHangs")
                        .HasForeignKey("ID_TTDH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.Voucher", "Voucher")
                        .WithMany("DonDatHangs")
                        .HasForeignKey("ID_VCH")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("KhachHang");

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("TrangThaiDonHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.HasOne("DoAn.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("DoAn.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("DoAn.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdCtsp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPham", null)
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("SanPhamIdSp");

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.HasOne("DoAn.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNv")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.PhuongThucThanhToan", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("PhuongThucThanhToanIdPhuongThucThanhToan");

                    b.HasOne("DoAn.Models.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherIdVch");

                    b.Navigation("NhanVien");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("DoAn.Models.KhachHang", b =>
                {
                    b.HasOne("DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("KhachHang")
                        .HasForeignKey("DoAn.Models.KhachHang", "IdTk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.HasOne("DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("NhanVien")
                        .HasForeignKey("DoAn.Models.NhanVien", "IdTk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("DoAn.Models.GioiTinh", "GioTinh")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdGioTinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.MuiHuong", "MuiHuong")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdMuiHuong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAn.Models.TheTich", "TheTich")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdTheTich")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdThuongHieu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GioTinh");

                    b.Navigation("MuiHuong");

                    b.Navigation("SanPham");

                    b.Navigation("TheTich");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.HasOne("DoAn.Models.VaiTro", "VaiTro")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("IdVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("DoAn.Models.VaiTro_PhanQuyen", b =>
                {
                    b.HasOne("DoAn.Models.PhanQuyen", "PhanQuyen")
                        .WithMany("VaiTroPhanQuyens")
                        .HasForeignKey("IdQuyen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DoAn.Models.VaiTro", "VaiTro")
                        .WithMany("VaiTroPhanQuyens")
                        .HasForeignKey("IdVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhanQuyen");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("DoAn.Models.DonDatHang", b =>
                {
                    b.Navigation("ChiTietDonDatHangs");
                });

            modelBuilder.Entity("DoAn.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.GioiTinh", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("DoAn.Models.KhachHang", b =>
                {
                    b.Navigation("DonDatHangs");

                    b.Navigation("GioHangs");
                });

            modelBuilder.Entity("DoAn.Models.MuiHuong", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAn.Models.PhanQuyen", b =>
                {
                    b.Navigation("VaiTroPhanQuyens");
                });

            modelBuilder.Entity("DoAn.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("DonDatHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DoAn.Models.SanPham", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("ChiTietDonDatHangs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.TaiKhoan", b =>
                {
                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DoAn.Models.TheTich", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.ThuongHieu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DoAn.Models.TrangThaiDonHang", b =>
                {
                    b.Navigation("DonDatHangs");
                });

            modelBuilder.Entity("DoAn.Models.VaiTro", b =>
                {
                    b.Navigation("TaiKhoans");

                    b.Navigation("VaiTroPhanQuyens");
                });

            modelBuilder.Entity("DoAn.Models.Voucher", b =>
                {
                    b.Navigation("DonDatHangs");

                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
