@model IEnumerable<DoAn.Models.SanPham>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    :root {
        --brand: #6c5ce7;
        --accent: #00d2ff;
        --accent2: #ff6b6b;
        --ink: #1f2937;
    }

    .shop-wrap {
        background: radial-gradient(1200px 400px at 10% -10%, rgba(108,92,231,.18), transparent 60%), radial-gradient(1200px 450px at 110% 0%, rgba(0,210,255,.18), transparent 60%), linear-gradient(180deg,#f8fafc,#ffffff);
        min-height: 100vh;
        padding-bottom: 40px;
    }

    .shop-hero {
        border-radius: 20px;
        background: linear-gradient(135deg, rgba(108,92,231,.15), rgba(0,210,255,.15));
        border: 1px solid rgba(108,92,231,.25);
        box-shadow: 0 10px 30px rgba(108,92,231,.15);
    }

        .shop-hero h2 {
            font-weight: 800;
            color: var(--ink)
        }

        .shop-hero p {
            color: #475569;
            margin: 0
        }

    .product-card {
        border-radius: 18px;
        overflow: hidden;
        border: 1px solid rgba(99,102,241,.25);
        box-shadow: 0 4px 18px rgba(31,41,55,.08);
        background: linear-gradient(180deg,#fff,#fbfdff);
        transition: transform .25s ease,box-shadow .25s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 18px 40px rgba(31,41,55,.15)
        }

    .product-img {
        position: relative;
        background: linear-gradient(135deg,#ffffff,#f6faff)
    }

        .product-img img {
            width: 100%;
            height: 300px;
            object-fit: contain
        }
    /* overlay link phủ toàn bộ vùng ảnh để vào chi tiết */
    .stretched-image-link {
        position: absolute;
        inset: 0;
        z-index: 1;
    }

    .badge-flag {
        position: absolute;
        left: 12px;
        top: 12px;
        padding: 6px 10px;
        border-radius: 999px;
        color: #fff;
        font-weight: 700;
        font-size: .85rem;
        box-shadow: 0 6px 14px rgba(0,0,0,.12);
        z-index: 2
    }

    .badge-discount {
        background: linear-gradient(135deg,var(--accent2),#ff8787)
    }

    .badge-oos {
        background: linear-gradient(135deg,#94a3b8,#64748b)
    }

    .price {
        font-weight: 800;
        font-size: 1.1rem;
        color: #111827
    }

    .old-price {
        color: #9ca3af;
        text-decoration: line-through
    }

    .cart-fab {
        position: absolute;
        right: 14px;
        bottom: 14px;
        width: 46px;
        height: 46px;
        border-radius: 999px;
        border: 0;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: center;
        background: radial-gradient(120% 120% at 30% 20%, var(--accent) 0%, var(--brand) 70%);
        box-shadow: 0 10px 20px rgba(108,92,231,.35);
        transition: transform .2s ease, box-shadow .2s ease;
        z-index: 3
    }

        .cart-fab:hover {
            transform: translateY(-2px) scale(1.03);
            box-shadow: 0 14px 28px rgba(108,92,231,.45)
        }

        .cart-fab.disabled {
            opacity: .5;
            filter: grayscale(.3);
            pointer-events: none
        }

    .btn-primary {
        background: linear-gradient(135deg,var(--brand),var(--accent));
        border: 0;
        box-shadow: 0 8px 18px rgba(108,92,231,.3)
    }

        .btn-primary:hover {
            filter: brightness(.95)
        }

    #toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1055
    }

    .toast-item {
        min-width: 260px;
        color: #fff;
        border-radius: 10px;
        padding: 10px 14px;
        margin-bottom: 10px;
        box-shadow: 0 8px 20px rgba(0,0,0,.25)
    }

    .toast-success {
        background: linear-gradient(135deg,#22c55e,#16a34a)
    }

    .toast-error {
        background: linear-gradient(135deg,#ef4444,#dc2626)
    }
</style>

<div class="shop-wrap">
    <div class="container my-4">
        <div class="shop-hero p-4 p-md-5">
            <h2 class="mb-1">Bộ sưu tập mới</h2>
            <p>Chọn mùi hương bạn thích – ưu đãi đang diễn ra 🔥</p>
        </div>
    </div>

    <div class="container">
        <!-- Bộ lọc -->
        <form method="get" class="row g-2 mb-4">
            <div class="col-md-4 col-lg-3">
                <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Tìm kiếm sản phẩm..." />
            </div>
            <div class="col-md-4 col-lg-3">
                <select name="thuongHieuId" class="form-select" asp-items="ViewBag.ThuongHieuList">
                    <option value="">-- Thương hiệu --</option>
                </select>
            </div>
            <div class="col-md-4 col-lg-3">
                <select name="gioiTinhId" class="form-select" asp-items="ViewBag.GioiTinhList">
                    <option value="">-- Giới tính --</option>
                </select>
            </div>
            <div class="col-md-12 col-lg-3 d-grid">
                <button type="submit" class="btn btn-primary">Lọc</button>
            </div>
        </form>

        <!-- Lưới 3 cột -->
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var sp in Model)
            {
                var ctBan = sp.SanPhamChiTiets
                .Where(c => c.SoLuong > 0).OrderBy(c => c.GiaBan).FirstOrDefault()
                ?? sp.SanPhamChiTiets.OrderBy(c => c.GiaBan).FirstOrDefault();

                decimal giaGoc = ctBan?.GiaBan ?? 0M;
                decimal giaHienThi = giaGoc;
                int giamPhanTram = 0;

                if (ctBan != null && ctBan.ChiTietKhuyenMais != null)
                {
                    var now = DateTime.Now;
                    var km = ctBan.ChiTietKhuyenMais
                    .Where(x => x.KhuyenMai != null
                    && x.KhuyenMai.TrangThai == 1
                    && x.KhuyenMai.NgayBatDau <= now
                    && x.KhuyenMai.NgayHetHan >= now
                    && x.GiaSauGiam > 0)
                    .OrderBy(x => x.GiaSauGiam)
                    .FirstOrDefault();

                    if (km != null && km.GiaSauGiam < giaGoc)
                    {
                        giaHienThi = km.GiaSauGiam;
                        giamPhanTram = (int)Math.Round((1 - (giaHienThi / giaGoc)) * 100M);
                        giamPhanTram = Math.Clamp(giamPhanTram, 0, 100);
                    }
                }
                bool hetHang = !sp.SanPhamChiTiets.Any(c => c.SoLuong > 0);

                <div class="col">
                    <div class="card product-card h-100 border-0">
                        <div class="product-img">
                            <img src="@sp.HinhAnh" alt="@sp.Ten_SanPham" />
                            @* overlay link phủ toàn bộ ảnh *@
                            <a class="stretched-image-link" asp-action="Details" asp-route-id="@sp.ID_SanPham" aria-label="Xem chi tiết @sp.Ten_SanPham"></a>

                            @if (hetHang)
                            {
                                <span class="badge-flag badge-oos">Hết hàng</span>
                            }
                            else if (giamPhanTram > 0)
                            {
                                <span class="badge-flag badge-discount">-@giamPhanTram%</span>
                            }

                            @if (hetHang)
                            {
                                <a class="cart-fab disabled" href="javascript:void(0)" title="Hết hàng">
                                    <i class="fa-solid fa-cart-plus"></i>
                                </a>
                            }
                            else
                            {
                                <a class="cart-fab" href="javascript:void(0)" title="Thêm vào giỏ hàng"
                                   onclick="addToCart('@sp.ID_SanPham')">
                                    <i class="fa-solid fa-cart-plus"></i>
                                </a>
                            }
                        </div>

                        <div class="card-body text-center">
                            <h6 class="card-title mb-2 text-truncate" title="@sp.Ten_SanPham">@sp.Ten_SanPham</h6>
                            <div class="d-flex justify-content-center align-items-center gap-2">
                                <span class="price">@string.Format("{0:N0} ₫", giaHienThi)</span>
                                @if (giamPhanTram > 0)
                                {
                                    <span class="old-price">@string.Format("{0:N0} ₫", giaGoc)</span>
                                }
                            </div>
                            <a asp-action="Details" asp-route-id="@sp.ID_SanPham" class="btn btn-link p-0 mt-2">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (ViewBag.TotalPages > 1)
        {
            <nav class="mt-4">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { search = ViewBag.Search, thuongHieuId = ViewBag.ThuongHieuId, gioiTinhId = ViewBag.GioiTinhId, page = i })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

<!-- Toast -->
<div id="toast-container"></div>
@section Scripts {
    <script>
        function showToast(message, ok=true){
          const box=document.getElementById('toast-container');
          const el=document.createElement('div');
          el.className='toast-item '+(ok?'toast-success':'toast-error');
          el.textContent=message; box.appendChild(el);
          setTimeout(()=>el.remove(),3000);
        }
        function addToCart(id){
          fetch(`/Cart/Add?id=${id}`, { method:'GET' })
            .then(r=>showToast(r.ok?'Đã thêm vào giỏ hàng':'Không thể thêm vào giỏ', r.ok))
            .catch(()=>showToast('Lỗi kết nối', false));
        }
    </script>
}
